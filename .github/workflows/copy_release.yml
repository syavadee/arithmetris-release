name: Copy Release

on:
  push:
    tags:
      - 'v*'

jobs:
  copy_release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install gh CLI
        run: |
          curl -sS https://webi.sh/gh | sh	

      - name: Get release info from private repo
        env:
          PRIVATE_REPO_TOKEN: ${{ secrets.PRIVATE_REPO_TOKEN }}
          TAG_NAME: ${{ github.ref }}
          GH_TOKEN: ${{ secrets.PRIVATE_REPO_TOKEN }}
        run: |
          set -x
          set -e
          source ~/.config/envman/PATH.env
          TAG_NAME=$(echo $TAG_NAME | sed 's/refs\/tags\///')
          RELEASE_ID=$(gh api /repos/$PRIVATE_REPO/releases/tags/$TAG_NAME | jq -r '.id')
          RELEASE_NAME=$(gh api /repos/$PRIVATE_REPO/releases/$RELEASE_ID | jq -r '.name')
          RELEASE_BODY=$(gh api /repos/$PRIVATE_REPO/releases/$RELEASE_ID | jq -r '.body')
          echo "RELEASE_ID=$RELEASE_ID" >> $GITHUB_ENV
          echo "RELEASE_NAME=$RELEASE_NAME" >> $GITHUB_ENV
          echo "RELEASE_BODY=$RELEASE_BODY" >> $GITHUB_ENV

      - name: Create release in public repo
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE_NAME: ${{ env.RELEASE_NAME }}
          RELEASE_BODY: ${{ env.RELEASE_BODY }}
          TAG_NAME: ${{ github.ref }}
          GH_TOKEN: ${{ secrets.PRIVATE_REPO_TOKEN }}
        run: |
          source ~/.config/envman/PATH.env
          TAG_NAME=$(echo $TAG_NAME | sed 's/refs\/tags\///')
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV
          gh release create $TAG_NAME --generate-notes

      - name: Upload APK assets from private release
        env:
          PRIVATE_REPO_TOKEN: ${{ secrets.PRIVATE_REPO_TOKEN }}
          RELEASE_ID: ${{ env.RELEASE_ID }}
          GH_TOKEN: ${{ secrets.PRIVATE_REPO_TOKEN }}
        run: |
          source ~/.config/envman/PATH.env
          ASSETS=$(gh api -H "Authorization: token $PRIVATE_REPO_TOKEN" /repos/$PRIVATE_REPO/releases/$RELEASE_ID/assets | jq -r '.[].browser_download_url')
          for ASSET_URL in $ASSETS; do
            ASSET_NAME=$(echo $ASSET_URL | sed -E 's/.*\/(.*)/\1/')
            if [[ "$ASSET_NAME" == *.apk ]]; then
              curl -H "Authorization: token $PRIVATE_REPO_TOKEN" -L "$ASSET_URL" > "$ASSET_NAME"
              gh release upload $TAG_NAME "$ASSET_NAME" --clobber
              rm "$ASSET_NAME"
            fi
          done